<class_libraries>
  <library path="liblayers">
    <class type="costmap_2d::InflationLayer"  base_class_type="costmap_2d::Layer">
      <description>Inflates obstacles to speed collision checking and to make robot prefer to stay away from obstacles.</description>
    </class>
    <class type="costmap_2d::ObstacleLayer"   base_class_type="costmap_2d::Layer">
      <description>Listens to laser scan and point cloud messages and marks and clears grid cells.</description>
    </class>
    <class type="costmap_2d::StaticLayer"     base_class_type="costmap_2d::Layer">
      <description>Listens to OccupancyGrid messages and copies them in, like from map_server.</description>
    </class>
    <class type="costmap_2d::VoxelLayer"     base_class_type="costmap_2d::Layer">
      <description>Similar to obstacle costmap, but uses 3D voxel grid to store data.</description>
    </class>
  </library>
  <library path="lib/libcostmap_prohibition_layer">
  	<class type="costmap_prohibition_layer_namespace::CostmapProhibitionLayer" base_class_type="costmap_2d::Layer">
    	<description>ROS-Package that implements a costmap layer to add prohibited areas to the costmap-2D by a user configuration.</description>
 		</class>
	</library>
<!--	<library path="lib/libtest_layer">
  	<class type="test_layer_namespace::TestLayer" base_class_type="costmap_2d::Layer">
    	<description>Demo Layer that adds a point at the specified distance in front of the robot</description>
  	</class>
	</library>
-->
	<library path="lib/libsimple_layer">
  	<class type="simple_layer_namespace::SimpleLayer" base_class_type="costmap_2d::Layer">
 	    <description>Demo Layer that adds a point 1 meter in front of the robot</description>
  	</class>
	</library>
</class_libraries>





