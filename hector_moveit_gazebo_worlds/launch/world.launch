<?xml version='1.0' ?>
<launch>
	<include file="$(find gazebo_ros)/launch/empty_world.launch">
		<arg name="world_name" value="$(find hector_moveit_gazebo_worlds)/worlds/garden2.world"/>
	</include>

<!-- Run the map server -->
  <node name="map_server" pkg="map_server" type="map_server" args="$(find motion_plan)/maps/orchard/orchard.yaml"/>


 <!-- Robot pose -->
  <arg name="x" default="-12"/>
  <arg name="y" default="-24"/>
  <arg name="z" default="0"/>
  <arg name="roll" default="0"/>
  <arg name="pitch" default="0"/>
  <arg name="yaw" default="0"/>

  <param name="robot_description"
         command="$(find xacro)/xacro.py $(find m2wr_description)/urdf/m2wr.xacro"/>
  <node name="m2wr_robot" pkg="gazebo_ros" type="spawn_model" output="screen"
        args="-urdf -param robot_description -model m2wr
              -x $(arg x) -y $(arg y) -z $(arg z)
              -R $(arg roll) -P $(arg pitch) -Y $(arg yaw)"/>

<node name="joint_state_publisher" pkg="joint_state_publisher" type="joint_state_publisher">
    <param name="use_gui" value="False"/>
  </node>
  <node pkg="robot_state_publisher" type="robot_state_publisher" name="robot_state_publisher"></node>
  
  <node pkg="rviz" type="rviz" name="rviz"></node>

 <node pkg="tf2_ros" type="static_transform_publisher" name="bl_bf" args="0 0 0 0 0 0 1 base_link base_footprint" />
   <!--<node pkg="tf2_ros" type="static_transform_publisher" name="bf_bl" args="0 0 0 0 0 0 1 base_footprint base_link" />-->
  <node pkg="tf2_ros" type="static_transform_publisher" name="bl_imu" args="0 0 0 0 0 0 1 base_link imu_link" />
  <node pkg="tf2_ros" type="static_transform_publisher" name="bl_gps" args="0 0 0 0 0 0 1 base_link gps_link" />

	<include file="$(find m2wr_description)/launch/ekf_navsat_localization.launch"/>

  <node pkg="pointcloud_to_laserscan" type="pointcloud_to_laserscan_node" name="pointcloud_to_laserscan">
      <remap from="cloud_in" to="/velodyne_points"/>
      <remap from="scan" to="/scan" />
      <rosparam>
        target_frame: velodyne_base_link
        transform_tolerance: 0.01
        min_height: 0.0
        max_height: 1.5
        
        angle_min: -1.5708
        angle_max: 1.5708
        angle_increment: 0.00436
        scan_time: 0.3333
        range_min: 0.40
        range_max: 10.0
        use_inf: true
        
        #concurrency_level affects number of pc queued for processing and the number of threadsused
        # 0: Detect number of cores
        # 1: Single threaded
        # 2: inf : Parallelism level
        concurrency_level: 1
      </rosparam>
    </node>

</launch>
